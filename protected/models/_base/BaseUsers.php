<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "users" available as properties of the model,
 * followed by relations of table "users" available as properties of the model.
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $email
 * @property string $activkey
 * @property string $create_at
 * @property string $lastvisit_at
 * @property integer $superuser
 * @property integer $status
 *
 * @property Profiles $profiles
 */
abstract class BaseUsers extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'users';
    }

    public static function representingColumn() {
        return 'username';
    }

    public function rules() {
        return array(
            array('username, password, email, create_at', 'required'),
            array('superuser, status', 'numerical', 'integerOnly'=>true),
            array('username', 'length', 'max'=>20),
            array('password, email, activkey', 'length', 'max'=>128),
            array('lastvisit_at', 'safe'),
            array('activkey, lastvisit_at, superuser, status', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, username, password, email, activkey, create_at, lastvisit_at, superuser, status', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'profiles' => array(self::HAS_ONE, 'Profiles', 'user_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'username' => Yii::t('app', 'Username'),
                'password' => Yii::t('app', 'Password'),
                'email' => Yii::t('app', 'Email'),
                'activkey' => Yii::t('app', 'Activkey'),
                'create_at' => Yii::t('app', 'Create At'),
                'lastvisit_at' => Yii::t('app', 'Lastvisit At'),
                'superuser' => Yii::t('app', 'Superuser'),
                'status' => Yii::t('app', 'Status'),
                'profiles' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('username', $this->username, true);
        $criteria->compare('password', $this->password, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('activkey', $this->activkey, true);
        $criteria->compare('create_at', $this->create_at, true);
        $criteria->compare('lastvisit_at', $this->lastvisit_at, true);
        $criteria->compare('superuser', $this->superuser);
        $criteria->compare('status', $this->status);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}