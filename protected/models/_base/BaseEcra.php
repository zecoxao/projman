<?php

/**
 * This is the model base class for the table "ecra".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ecra".
 *
 * Columns in table "ecra" available as properties of the model,
 * followed by relations of table "ecra" available as properties of the model.
 *
 * @property integer $cod_ecra
 * @property string $descricao
 * @property string $modelo_ecra
 *
 * @property CasoUso[] $casoUsos
 */
abstract class BaseEcra extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'ecra';
    }

    public static function representingColumn() {
        return 'descricao';
    }

    public function rules() {
        return array(
            array('descricao, modelo_ecra', 'required'),
            array('descricao', 'length', 'max'=>100),
            array('modelo_ecra', 'length', 'max'=>500),
            array('cod_ecra, descricao, modelo_ecra', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'casoUsos' => array(self::MANY_MANY, 'CasoUso', 'ecra_caso(ecra, caso_uso)'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'cod_ecra' => Yii::t('app', 'Cod Ecra'),
                'descricao' => Yii::t('app', 'Descricao'),
                'modelo_ecra' => Yii::t('app', 'Modelo Ecra'),
                'casoUsos' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('cod_ecra', $this->cod_ecra);
        $criteria->compare('descricao', $this->descricao, true);
        $criteria->compare('modelo_ecra', $this->modelo_ecra, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}