<?php

/**
 * This is the model base class for the table "entidade".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Entidade".
 *
 * Columns in table "entidade" available as properties of the model,
 * followed by relations of table "entidade" available as properties of the model.
 *
 * @property integer $id
 * @property string $nome
 * @property string $descricao
 *
 * @property EntidadeCaso[] $entidadeCasos
 */
abstract class BaseEntidade extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'entidade';
    }

    public static function representingColumn() {
        return 'nome';
    }

    public function rules() {
        return array(
            array('nome, descricao', 'required'),
            array('nome', 'length', 'max'=>100),
            array('descricao', 'length', 'max'=>150),
            array('id, nome, descricao', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'entidadeCasos' => array(self::HAS_MANY, 'EntidadeCaso', 'entidade'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'nome' => Yii::t('app', 'Nome'),
                'descricao' => Yii::t('app', 'Descricao'),
                'entidadeCasos' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('nome', $this->nome, true);
        $criteria->compare('descricao', $this->descricao, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}